{
  "apiVersion": "1.0",
  "swaggerVersion": "1.2",
  "basePath": "http://localhost:3000",
  "resourcePath": "users",
  "apis": [
    {
      "path": "/api/users/me.json",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "header",
              "name": "Authorization",
              "type": "string",
              "description": "Authentication token",
              "required": false
            }
          ],
          "summary": "Fetches current user",
          "responseMessages": [
            {
              "code": 200,
              "responseModel": "User",
              "message": "Success"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Not Found"
            }
          ],
          "nickname": "Api::Users#me",
          "method": "get"
        }
      ]
    },
    {
      "path": "/api/users.json",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "header",
              "name": "Authorization",
              "type": "string",
              "description": "Authentication token",
              "required": false
            }
          ],
          "summary": "Fetches all User items",
          "responseMessages": [
            {
              "code": 200,
              "responseModel": null,
              "message": "Ok"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 406,
              "responseModel": null,
              "message": "The request you made is not acceptable"
            }
          ],
          "notes": "This lists all the active users",
          "nickname": "Api::Users#index",
          "method": "get"
        }
      ]
    },
    {
      "path": "/api/users.json",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "header",
              "name": "Authorization",
              "type": "string",
              "description": "Authentication token",
              "required": false
            },
            {
              "paramType": "form",
              "name": "email",
              "type": "string",
              "description": "Email",
              "required": false
            },
            {
              "paramType": "form",
              "name": "password",
              "type": "string",
              "description": "password",
              "required": false
            },
            {
              "paramType": "form",
              "name": "role",
              "type": "string",
              "description": "Role",
              "required": false,
              "allowableValues": {
                "valueType": "LIST",
                "values": [
                  "admin",
                  "normal"
                ]
              }
            }
          ],
          "summary": "Creates a new User",
          "responseMessages": [
            {
              "code": 200,
              "responseModel": null,
              "message": "Ok"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 406,
              "responseModel": null,
              "message": "Not Acceptable"
            }
          ],
          "nickname": "Api::Users#create",
          "method": "post"
        }
      ]
    },
    {
      "path": "/api/users/{id}.json",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "header",
              "name": "Authorization",
              "type": "string",
              "description": "Authentication token",
              "required": false
            },
            {
              "paramType": "path",
              "name": "id",
              "type": "required",
              "description": null,
              "required": false
            }
          ],
          "summary": "Fetches a single User item",
          "responseMessages": [
            {
              "code": 200,
              "responseModel": "User",
              "message": "Success"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Not Found"
            },
            {
              "code": 406,
              "responseModel": null,
              "message": "Not Acceptable"
            }
          ],
          "nickname": "Api::Users#show",
          "method": "get"
        }
      ]
    },
    {
      "path": "/api/users/{id}.json",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "header",
              "name": "Authorization",
              "type": "string",
              "description": "Authentication token",
              "required": false
            },
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "User Id",
              "required": true
            },
            {
              "paramType": "form",
              "name": "email",
              "type": "string",
              "description": "Email",
              "required": false
            },
            {
              "paramType": "form",
              "name": "password",
              "type": "string",
              "description": "password",
              "required": false
            },
            {
              "paramType": "form",
              "name": "role",
              "type": "string",
              "description": "Role",
              "required": false,
              "allowableValues": {
                "valueType": "LIST",
                "values": [
                  "admin",
                  "superadmin",
                  "user"
                ]
              }
            }
          ],
          "summary": "Updates an existing User",
          "responseMessages": [
            {
              "code": 200,
              "responseModel": null,
              "message": "Ok"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Not Found"
            },
            {
              "code": 406,
              "responseModel": null,
              "message": "Not Acceptable"
            }
          ],
          "nickname": "Api::Users#update",
          "method": "patch"
        }
      ]
    },
    {
      "path": "/api/users/{id}.json",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "header",
              "name": "Authorization",
              "type": "string",
              "description": "Authentication token",
              "required": false
            },
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "User Id",
              "required": true
            }
          ],
          "summary": "Deletes an existing User item",
          "responseMessages": [
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Not Found"
            }
          ],
          "nickname": "Api::Users#destroy",
          "method": "delete"
        }
      ]
    }
  ],
  "authorizations": null
}
